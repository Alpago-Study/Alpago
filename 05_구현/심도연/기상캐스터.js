// [문제 이름]
// : 기상캐스터

// [문제 설명]
// : JOI시는 남북방향이 H 킬로미터, 동서방향이 W 킬로미터인 직사각형 모양이다. JOI시는 가로와 세로의 길이가 1킬로미터인 H × W 개의 작은 구역들로 나뉘어 있다. 북쪽으로부터 i 번째, 서쪽으로부터 j 번째에 있는 구역을 (i, j) 로 표시한다.
//   각 구역의 하늘에는 구름이 있을 수도, 없을 수도 있다. 모든 구름은 1분이 지날 때마다 1킬로미터씩 동쪽으로 이동한다. 오늘은 날씨가 정말 좋기 때문에 JOI시의 외부에서 구름이 이동해 오는 경우는 없다.
//   지금 각 구역의 하늘에 구름이 있는지 없는지를 알고 있다. 기상청에서 일하고 있는 여러분은 각 구역에 대해서 지금부터 몇 분뒤 처음으로 하늘에 구름이 오는지를 예측하는 일을 맡았다.
//   각 구역에 대해서 지금부터 몇 분뒤 처음으로 하늘에 구름이 오는지를 구하여라.

// [문제 링크]
// : https://www.acmicpc.net/problem/10709

// 출력
// : 지금부터 몇 분후에 처음으로 구역에 구름이 뜨는지 분을 표시하라
//   처음부터 구역에 떠있던 구름은 0으로 표기
//   몇분이 지나도 구름이 뜨지 않을 경우 -1

// 예제 1
// 3 4
// c..c : 0 1 2 0 -> 구름이 이동하긴 하지만 이미 구름이 있던 곳을 먼저 0으로 표기
// ..c. : -1 -1 0 1
// .... : -1 -1 -1 -1 -> 몇 분이 지나도 구름이 이동하지 않는다

// 쉽게 생각하면 c 뒤(왼쪽)에 있는 .은 -1
// c 앞(오른쪽)에 있는 .은 시간 추가
// 만약 또 다른 c를 만나면 0으로 처리
// 그 c 다음이 .이면 시간 추가, 아니면 종료

let hA = 3;
let wA = 4;
let arrA = [
  ['c', '.', '.', 'c'],
  ['.', '.', 'c', '.'],
  ['.', '.', '.', '.'],
];
let hB = 6;
let wB = 8;
let arrB = [
  ['.', 'c', '.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.', '.', '.'],
  ['.', 'c', 'c', 'c', '.', '.', 'c', '.'],
  ['.', '.', '.', '.', 'c', '.', '.', '.'],
  ['.', '.', 'c', '.', 'c', 'c', '.', '.'],
  ['.', '.', '.', '.', 'c', '.', '.', '.'],
];

const weathercaster = (h, w, arr) => {
  let answer = [];
  let select = '.';
  let count = 1;

  for (let i = 0; i < arr.length; i++) {
    let temp = [];

    for (let j = 0; j < w; j++) {
      if (arr[i][j] === 'c') {
        temp.push(0);
        select = 'c';
        count = 1;
      } else if (arr[i][j] === '.' && select === 'c') {
        temp.push(count);
        count++;
      } else if (arr[i][j] === '.' && select === '.') {
        temp.push(-1);
        select = '.';
      }
    }
    answer.push(temp);
    select = '.';
    count = 1;
  }

  console.log(answer);
};

console.log(weathercaster(hA, wA, arrA));
console.log(weathercaster(hB, wB, arrB));
