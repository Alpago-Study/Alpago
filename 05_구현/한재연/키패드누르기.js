// [문제 이름]
// : 키패드 누르기

// [문제 설명]
// : 이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.
// 맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다.

// 1. 엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거리로 1에 해당합니다.
// 2. 왼쪽 열의 3개의 숫자 1, 4, 7을 입력할 때는 왼손 엄지손가락을 사용합니다.
// 3. 오른쪽 열의 3개의 숫자 3, 6, 9를 입력할 때는 오른손 엄지손가락을 사용합니다.
// 4. 가운데 열의 4개의 숫자 2, 5, 8, 0을 입력할 때는 두 엄지손가락의 현재 키패드의 위치에서 더 가까운 엄지손가락을 사용합니다.
// 4-1. 만약 두 엄지손가락의 거리가 같다면, 오른손잡이는 오른손 엄지손가락, 왼손잡이는 왼손 엄지손가락을 사용합니다.

// 순서대로 누를 번호가 담긴 배열 numbers, 왼손잡이인지 오른손잡이인 지를 나타내는 문자열 hand가 매개변수로 주어질 때, 각 번호를 누른 엄지손가락이 왼손인 지 오른손인 지를 나타내는 연속된 문자열 형태로 return 하도록 solution 함수를 완성해주세요.

// [문제 링크]
// : https://school.programmers.co.kr/learn/courses/30/lessons/67256

function solution(numbers, hand) {
    // 키패드의 위치를 배열로 표현
    const keypad = [[3, 1], [0, 0], [0, 1], [0, 2], [1, 0], 
                    [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]];
    // 오른손과 왼손의 초기값 세팅
    left = [3, 0];
    right = [3, 2];
    hands = "";
    
    numbers.map(n => {
        // 1, 4, 7번은 왼손, 3, 6, 9번은 오른손
        if ("147".includes(n)) {
            // 정답으로 반환할 문자열에 어느 손이 눌렀는지 알기위해 L 또는 R 문자 추가
            hands += "L";
        } else if ("369".includes(n)) {
            hands += "R";
        } else {
            // 이외의 경우 오른손과 왼손의 위치와 버튼의 위치의 거리를 절댓값으로 구해 더 짧은 거리를 가진 손으로 누름
            const R = Math.abs(keypad[n][0] - right[0]) + Math.abs(keypad[n][1] - right[1]);
            const L = Math.abs(keypad[n][0] - left[0]) + Math.abs(keypad[n][1] - left[1]); 
            if (R < L) {
                hands += "R";
            }
            else if (L < R) {
                hands += "L";
            }
            else {
                // 거리가 같을 경우에는 오른손잡이는 오른손, 왼손잡이는 왼손으로 누름
                if (hand === "right") {
                    hands += "R";
                } else {
                    hands += "L";
                }
            }
        }
        // 거리를 구하기 위해 각 손의 위치 기록
        // 오른손이 버튼을 눌렀으면 오른손의 위치 변경, 왼손의 경우 왼손의 위치 변경
        hands[hands.length - 1] === "R" ? right = [keypad[n][0], keypad[n][1]] : left = [keypad[n][0], keypad[n][1]];
    })
    
    return hands;
}