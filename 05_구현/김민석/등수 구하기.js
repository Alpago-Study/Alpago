// [문제 이름]
// : 등수 구하기

// [문제 설명]
// : 태수가 즐겨하는 디제이맥스 게임은 각각의 노래마다 랭킹 리스트가 있다. 이것은 매번 게임할 때 마다 얻는 점수가 비오름차순으로 저장되어 있는 것이다.

// 이 랭킹 리스트의 등수는 보통 위에서부터 몇 번째 있는 점수인지로 결정한다. 하지만, 같은 점수가 있을 때는 그러한 점수의 등수 중에 가장 작은 등수가 된다.

// 예를 들어 랭킹 리스트가 100, 90, 90, 80일 때 각각의 등수는 1, 2, 2, 4등이 된다

// 랭킹 리스트에 올라 갈 수 있는 점수의 개수 P가 주어진다. 그리고 리스트에 있는 점수 N개가 비오름차순으로 주어지고, 태수의 새로운 점수가 주어진다. 이때, 태수의 새로운 점수가 랭킹 리스트에서 몇 등 하는지 구하는 프로그램을 작성하시오. 만약 점수가 랭킹 리스트에 올라갈 수 없을 정도로 낮다면 -1을 출력한다.

// 만약, 랭킹 리스트가 꽉 차있을 때, 새 점수가 이전 점수보다 더 좋을 때만 점수가 바뀐다.

// [문제 링크]
// : https://www.acmicpc.net/problem/1205

const solution = (newScore, maxCount, scoreList) => {
  // 1. 만약 랭킹 리스트가 현재 꽉 차 있고, 새 점수가 랭킹 리스트의 마지막 점수보다 크지 않다면 점수 교체가 불가능하므로 -1 반환
  if (
    scoreList.length === maxCount &&
    newScore <= scoreList[scoreList.length - 1]
  )
    return -1;

  let rank = 1; // 초기 등수

  // 2. 랭킹 리스트를 순회하면서 새 점수보다 큰 점수인 경우에 등수 + 1
  scoreList.forEach((score) => score > newScore && rank++);

  // 3. 누적된 등수 반환
  return rank;
};

console.log(solution(90, 10, [100, 90, 80]));
console.log(solution(1, 10, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));
console.log(solution(1, 10, [10, 9, 8, 7, 6, 5, 4, 3, 3, 0]));
console.log(solution(0, 50, []));
