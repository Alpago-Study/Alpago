// [문제 이름]
// : 주유소(13305)

// [문제 설명]
// 어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다. 편의상 일직선을 수평 방향으로 두자. 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다. 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 도로 길이의 단위는 km를 사용한다.

// 처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다. 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다. 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다. 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다. 가격의 단위는 원을 사용한다.

// 예를 들어, 이 나라에 다음 그림처럼 4개의 도시가 있다고 하자. 원 안에 있는 숫자는 그 도시에 있는 주유소의 리터당 가격이다. 도로 위에 있는 숫자는 도로의 길이를 표시한 것이다.

// 제일 왼쪽 도시에서 6리터의 기름을 넣고, 더 이상의 주유 없이 제일 오른쪽 도시까지 이동하면 총 비용은 30원이다. 만약 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 3리터의 기름을 넣고(3×2 = 6원) 다음 도시에서 1리터의 기름을 넣어(1×4 = 4원) 제일 오른쪽 도시로 이동하면, 총 비용은 20원이다. 또 다른 방법으로 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 4리터의 기름을 넣고(4×2 = 8원) 제일 오른쪽 도시까지 이동하면, 총 비용은 18원이다.

// 각 도시에 있는 주유소의 기름 가격과, 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램을 작성하시오.

// [문제 링크]
// : https://www.acmicpc.net/problem/13305

// 백준 문제풀이용
let fs = require('fs');
let input = fs.readFileSync('./ex.txt').toString().split('\n');

// 도시의 개수
let n = Number(input[0]);
// 인접한 두 도시를 연결하는 도로의 길이
let distance = input[1].split(' ').map(BigInt);
// 도시별 주유소의 리터당 가격
let price = input[2].split(' ').map(BigInt);
// 총 비용 -> 초기값으로 첫 도시에서 무조건 지불해야할 기름비 할당
let totalPrice = price[0] * distance[0];

// 최소 주유 비용 -> 초기에는 첫번째 도시 가격으로 셋팅
let minPrice = price[0];

// 현재 주유비가 다음 도시의 주유비 보다 싸면 현재도시에서 처리
for (let i = 1; i < price.length - 1; i++) {
  if (minPrice > price[i]) {
    minPrice = price[i];
  }
  totalPrice += minPrice * distance[i];
}

console.log(String(totalPrice));

/*
58점 나오길래 구글링해서 찾아보니 Number 대신 BigInt를 써야 풀리는 문제였다...
엄청 큰 정수를 쓸때 사용하는 내장 객체라고 한다.
더 알고싶지 않다...
*/
