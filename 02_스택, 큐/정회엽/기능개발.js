//문제이름 : 기능개발

/*문제 설명 : 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 
각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.

또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 
이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.

먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 
각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.

제한 사항
작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.
작업 진도는 100 미만의 자연수입니다.
작업 속도는 100 이하의 자연수입니다.
배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 
 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다. */

function solution(progresses, speeds) {
  let answer = []; // 같은날 배포된 작업수를 담을 배열
  let day = 1; // 작업 날짜
  let count = 0; // 그날 작업된 작업량
  let progress = 0; // 작업율
  while (progresses[0]) {
    // 전체 작업이 완료될때 까지니까 progresses 배열 내부에 작업이 존재하지 않을때까지 반복.
    progress = progresses[0] + speeds[0] * day;
    if (progress >= 100) {
      // 작업율이 100을 넘기면 배포가능하니까
      count++; // 작업량을 1 더해주고
      progresses.shift(); // 첫번째 요소를 제거.
      speeds.shift(); // 작업속도도 첫번째 요소 제거.
    } else {
      // 작업율이 100아래라면 배포불가이니까
      if (count > 0) {
        //작업완료된 것이 있다면
        answer.push(count); // 그날 배포된 작업갯수를 담고
      }
      day++; // 다음날로 넘어간다
      count = 0; // 작업량 초기화
    }
  }
  answer.push(count);
  return answer;
}
